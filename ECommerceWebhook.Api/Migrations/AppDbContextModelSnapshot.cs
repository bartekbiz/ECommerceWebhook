// <auto-generated />
using ECommerceWebhook.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceWebhook.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("ECommerceWebhook.Domain.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "event1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "event2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "event3"
                        });
                });

            modelBuilder.Entity("ECommerceWebhook.Domain.Entities.Webhook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Webhooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            Url = "http://some.url/1"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 1,
                            Url = "http://some.url/2"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            Url = "http://some.url/3"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 2,
                            Url = "http://some.url/4"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 2,
                            Url = "http://some.url/5"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 2,
                            Url = "http://some.url/6"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 3,
                            Url = "http://some.url/7"
                        });
                });

            modelBuilder.Entity("ECommerceWebhook.Domain.Entities.Webhook", b =>
                {
                    b.HasOne("ECommerceWebhook.Domain.Entities.Event", "Event")
                        .WithMany("WebhookRegistrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ECommerceWebhook.Domain.Entities.Event", b =>
                {
                    b.Navigation("WebhookRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
